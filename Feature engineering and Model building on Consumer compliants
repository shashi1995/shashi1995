{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date received</th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>ZIP code</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Date sent to company</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "      <th>Consumer disputed?</th>\n",
       "      <th>Complaint ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2015-10-14</td>\n",
       "      <td>Credit reporting</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Incorrect information on credit report</td>\n",
       "      <td>Information is not mine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Equifax</td>\n",
       "      <td>GA</td>\n",
       "      <td>30134</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent not provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-10-14</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1605653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2015-04-26</td>\n",
       "      <td>Bank account or service</td>\n",
       "      <td>Other bank product/service</td>\n",
       "      <td>Deposits and withdrawals</td>\n",
       "      <td>NaN</td>\n",
       "      <td>RE : XXXX XXXX XXXX-PRIVILEGED AND CONFIDENTIA...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Wells Fargo &amp; Company</td>\n",
       "      <td>GA</td>\n",
       "      <td>319XX</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-04-26</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1347613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2013-12-20</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Citibank</td>\n",
       "      <td>SC</td>\n",
       "      <td>29203</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Phone</td>\n",
       "      <td>2014-01-03</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>640394</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2016-03-03</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Not given enough info to verify debt</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Company has responded to the consumer and the ...</td>\n",
       "      <td>FAIR COLLECTIONS &amp; OUTSOURCING, INC.</td>\n",
       "      <td>OH</td>\n",
       "      <td>43082</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Referral</td>\n",
       "      <td>2016-03-04</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1815134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>2015-01-30</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Medical</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Not given enough info to verify debt</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>HCFS Health Care Financial Services, Inc.</td>\n",
       "      <td>CA</td>\n",
       "      <td>90036</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-01-30</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1218613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>358805</td>\n",
       "      <td>2014-04-14</td>\n",
       "      <td>Credit reporting</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Incorrect information on credit report</td>\n",
       "      <td>Information is not mine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Experian</td>\n",
       "      <td>OR</td>\n",
       "      <td>97306</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Web</td>\n",
       "      <td>2014-04-13</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>806868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>358806</td>\n",
       "      <td>2013-03-14</td>\n",
       "      <td>Mortgage</td>\n",
       "      <td>Other mortgage</td>\n",
       "      <td>Loan modification,collection,foreclosure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Citibank</td>\n",
       "      <td>OH</td>\n",
       "      <td>43026</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Referral</td>\n",
       "      <td>2013-03-18</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>355254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>358807</td>\n",
       "      <td>2013-02-01</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Payoff process</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Capital One</td>\n",
       "      <td>TX</td>\n",
       "      <td>76021</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Web</td>\n",
       "      <td>2013-02-01</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>283994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>358808</td>\n",
       "      <td>2015-06-25</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt is not mine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Encore Capital Group</td>\n",
       "      <td>FL</td>\n",
       "      <td>33256</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Phone</td>\n",
       "      <td>2015-06-29</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1438670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>358809</td>\n",
       "      <td>2015-05-12</td>\n",
       "      <td>Credit reporting</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Incorrect information on credit report</td>\n",
       "      <td>Personal information</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>TransUnion Intermediate Holdings, Inc.</td>\n",
       "      <td>FL</td>\n",
       "      <td>32583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Referral</td>\n",
       "      <td>2015-06-03</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1372035</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>358810 rows Ã— 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date received                  Product  \\\n",
       "0         2015-10-14         Credit reporting   \n",
       "1         2015-04-26  Bank account or service   \n",
       "2         2013-12-20              Credit card   \n",
       "3         2016-03-03          Debt collection   \n",
       "4         2015-01-30          Debt collection   \n",
       "...              ...                      ...   \n",
       "358805    2014-04-14         Credit reporting   \n",
       "358806    2013-03-14                 Mortgage   \n",
       "358807    2013-02-01              Credit card   \n",
       "358808    2015-06-25          Debt collection   \n",
       "358809    2015-05-12         Credit reporting   \n",
       "\n",
       "                                  Sub-product  \\\n",
       "0                                         NaN   \n",
       "1                  Other bank product/service   \n",
       "2                                         NaN   \n",
       "3       Other (i.e. phone, health club, etc.)   \n",
       "4                                     Medical   \n",
       "...                                       ...   \n",
       "358805                                    NaN   \n",
       "358806                         Other mortgage   \n",
       "358807                                    NaN   \n",
       "358808  Other (i.e. phone, health club, etc.)   \n",
       "358809                                    NaN   \n",
       "\n",
       "                                           Issue  \\\n",
       "0         Incorrect information on credit report   \n",
       "1                       Deposits and withdrawals   \n",
       "2                                          Other   \n",
       "3                Disclosure verification of debt   \n",
       "4                Disclosure verification of debt   \n",
       "...                                          ...   \n",
       "358805    Incorrect information on credit report   \n",
       "358806  Loan modification,collection,foreclosure   \n",
       "358807                            Payoff process   \n",
       "358808     Cont'd attempts collect debt not owed   \n",
       "358809    Incorrect information on credit report   \n",
       "\n",
       "                                   Sub-issue  \\\n",
       "0                    Information is not mine   \n",
       "1                                        NaN   \n",
       "2                                        NaN   \n",
       "3       Not given enough info to verify debt   \n",
       "4       Not given enough info to verify debt   \n",
       "...                                      ...   \n",
       "358805               Information is not mine   \n",
       "358806                                   NaN   \n",
       "358807                                   NaN   \n",
       "358808                      Debt is not mine   \n",
       "358809                  Personal information   \n",
       "\n",
       "                             Consumer complaint narrative  \\\n",
       "0                                                     NaN   \n",
       "1       RE : XXXX XXXX XXXX-PRIVILEGED AND CONFIDENTIA...   \n",
       "2                                                     NaN   \n",
       "3                                                     NaN   \n",
       "4                                                     NaN   \n",
       "...                                                   ...   \n",
       "358805                                                NaN   \n",
       "358806                                                NaN   \n",
       "358807                                                NaN   \n",
       "358808                                                NaN   \n",
       "358809                                                NaN   \n",
       "\n",
       "                                  Company public response  \\\n",
       "0                                                     NaN   \n",
       "1                                                     NaN   \n",
       "2                                                     NaN   \n",
       "3       Company has responded to the consumer and the ...   \n",
       "4                                                     NaN   \n",
       "...                                                   ...   \n",
       "358805                                                NaN   \n",
       "358806                                                NaN   \n",
       "358807                                                NaN   \n",
       "358808                                                NaN   \n",
       "358809   Company chooses not to provide a public response   \n",
       "\n",
       "                                          Company State ZIP code Tags  \\\n",
       "0                                         Equifax    GA    30134  NaN   \n",
       "1                           Wells Fargo & Company    GA    319XX  NaN   \n",
       "2                                        Citibank    SC    29203  NaN   \n",
       "3            FAIR COLLECTIONS & OUTSOURCING, INC.    OH    43082  NaN   \n",
       "4       HCFS Health Care Financial Services, Inc.    CA    90036  NaN   \n",
       "...                                           ...   ...      ...  ...   \n",
       "358805                                   Experian    OR    97306  NaN   \n",
       "358806                                   Citibank    OH    43026  NaN   \n",
       "358807                                Capital One    TX    76021  NaN   \n",
       "358808                       Encore Capital Group    FL    33256  NaN   \n",
       "358809     TransUnion Intermediate Holdings, Inc.    FL    32583  NaN   \n",
       "\n",
       "       Consumer consent provided? Submitted via Date sent to company  \\\n",
       "0            Consent not provided           Web           2015-10-14   \n",
       "1                Consent provided           Web           2015-04-26   \n",
       "2                             NaN         Phone           2014-01-03   \n",
       "3                             NaN      Referral           2016-03-04   \n",
       "4                             NaN           Web           2015-01-30   \n",
       "...                           ...           ...                  ...   \n",
       "358805                        NaN           Web           2014-04-13   \n",
       "358806                        NaN      Referral           2013-03-18   \n",
       "358807                        NaN           Web           2013-02-01   \n",
       "358808                        NaN         Phone           2015-06-29   \n",
       "358809                        NaN      Referral           2015-06-03   \n",
       "\n",
       "           Company response to consumer Timely response? Consumer disputed?  \\\n",
       "0               Closed with explanation              Yes                 No   \n",
       "1               Closed with explanation              Yes                Yes   \n",
       "2       Closed with non-monetary relief              Yes                 No   \n",
       "3               Closed with explanation              Yes                 No   \n",
       "4               Closed with explanation              Yes                Yes   \n",
       "...                                 ...              ...                ...   \n",
       "358805  Closed with non-monetary relief              Yes                 No   \n",
       "358806  Closed with non-monetary relief              Yes                 No   \n",
       "358807                           Closed              Yes                Yes   \n",
       "358808  Closed with non-monetary relief              Yes                 No   \n",
       "358809          Closed with explanation              Yes                 No   \n",
       "\n",
       "        Complaint ID  \n",
       "0            1605653  \n",
       "1            1347613  \n",
       "2             640394  \n",
       "3            1815134  \n",
       "4            1218613  \n",
       "...              ...  \n",
       "358805        806868  \n",
       "358806        355254  \n",
       "358807        283994  \n",
       "358808       1438670  \n",
       "358809       1372035  \n",
       "\n",
       "[358810 rows x 18 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from ipywidgets import widgets\n",
    "df= pd.read_csv('Edureka_Consumer_Complaints_train.csv',parse_dates=['Date received','Date sent to company'], dayfirst=False)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date received                    0.000000\n",
       "Product                          0.000000\n",
       "Sub-product                     28.925058\n",
       "Issue                            0.000000\n",
       "Sub-issue                       61.139322\n",
       "Consumer complaint narrative    84.342688\n",
       "Company public response         81.067696\n",
       "Company                          0.000000\n",
       "State                            0.809063\n",
       "ZIP code                         0.811293\n",
       "Tags                            86.002062\n",
       "Consumer consent provided?      71.689752\n",
       "Submitted via                    0.000000\n",
       "Date sent to company             0.000000\n",
       "Company response to consumer     0.000000\n",
       "Timely response?                 0.000000\n",
       "Consumer disputed?               0.000000\n",
       "Complaint ID                     0.000000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Missing value ratio\n",
    "df.isnull().sum()*100/len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date received</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2015-08-27</td>\n",
       "      <td>579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2015-08-26</td>\n",
       "      <td>552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2014-06-26</td>\n",
       "      <td>526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2015-07-08</td>\n",
       "      <td>515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2015-08-12</td>\n",
       "      <td>490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2016-01-26</td>\n",
       "      <td>475</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Consumer complaint narrative\n",
       "Date received                              \n",
       "2015-08-27                              579\n",
       "2015-08-26                              552\n",
       "2014-06-26                              526\n",
       "2015-07-08                              515\n",
       "2015-08-12                              490\n",
       "2016-01-26                              475"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "highest_complaints_received=df.groupby('Date received')['Consumer complaint narrative'].size().sort_values(ascending=False)\n",
    "highest_complaints_sent=df.groupby('Date sent to company')['Consumer complaint narrative'].size().sort_values(ascending=False)\n",
    "highest_complaints_received=pd.DataFrame(highest_complaints_received)\n",
    "highest_complaints_received[:6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Count')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "companies=df.groupby('Date received')['Date received'].count().sort_values(ascending=True)\n",
    "plt.figure(figsize=(8,5))\n",
    "plt.xticks(rotation=50,fontsize=10, ha='right')\n",
    "plt.yticks(fontsize=10)\n",
    "g=sns.barplot(companies.index[0:31],companies.values[0:31])\n",
    "g.set_xlabel(\"Complaints received\", fontsize=10)\n",
    "g.set_ylabel(\"Count\", fontsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date sent to company</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2015-11-13</td>\n",
       "      <td>664</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2015-07-08</td>\n",
       "      <td>565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2014-01-13</td>\n",
       "      <td>536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2014-02-07</td>\n",
       "      <td>532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2014-02-10</td>\n",
       "      <td>523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2016-04-06</td>\n",
       "      <td>517</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Consumer complaint narrative\n",
       "Date sent to company                              \n",
       "2015-11-13                                     664\n",
       "2015-07-08                                     565\n",
       "2014-01-13                                     536\n",
       "2014-02-07                                     532\n",
       "2014-02-10                                     523\n",
       "2016-04-06                                     517"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "highest_complaints_sent=pd.DataFrame(highest_complaints_sent)\n",
    "highest_complaints_sent[:6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Count')"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "companies=df.groupby('Date sent to company')['Date sent to company'].count().sort_values(ascending=False)\n",
    "plt.figure(figsize=(8,5))\n",
    "plt.xticks(rotation=50,fontsize=10, ha='right')\n",
    "plt.yticks(fontsize=10)\n",
    "g=sns.barplot(companies.index[0:31],companies.values[0:31])\n",
    "g.set_xlabel(\"Complaints sent to company\", fontsize=10)\n",
    "g.set_ylabel(\"Count\", fontsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date received</th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Date sent to company</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "      <th>Consumer disputed?</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>109</td>\n",
       "      <td>2015-09-08</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>False statements or representation</td>\n",
       "      <td>Attempted to collect wrong amount</td>\n",
       "      <td>Amshire Collections is attempting to collect a...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Amsher Collection Services, Inc.</td>\n",
       "      <td>IN</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-09-08</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356</td>\n",
       "      <td>2016-07-07</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt is not mine</td>\n",
       "      <td>I WAS SUED BY EQUABLE ASCENT FINANCIAL LLC WHI...</td>\n",
       "      <td>Company can't verify or dispute the facts in t...</td>\n",
       "      <td>Allgate Financial, LLC</td>\n",
       "      <td>MD</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-07-07</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>597</td>\n",
       "      <td>2015-10-24</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>False statements or representation</td>\n",
       "      <td>Attempted to collect wrong amount</td>\n",
       "      <td>I owe a bill XXXX from early cancellation of c...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Valentine and Kebartas, Inc.</td>\n",
       "      <td>OH</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-10-28</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>851</td>\n",
       "      <td>2015-11-16</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Right to dispute notice not received</td>\n",
       "      <td>Defendant gave debt to collection agency who c...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>SquareTwo Financial Corporation</td>\n",
       "      <td>FL</td>\n",
       "      <td>Older American, Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-11-16</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>927</td>\n",
       "      <td>2016-01-29</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt was paid</td>\n",
       "      <td>XXXX XXXX continues to send this account to co...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Pinnacle Credit Services, LLC</td>\n",
       "      <td>SC</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-02-03</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>355936</td>\n",
       "      <td>2016-06-28</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>Company calls me three to six times a day even...</td>\n",
       "      <td>Company has responded to the consumer and the ...</td>\n",
       "      <td>Wells Fargo &amp; Company</td>\n",
       "      <td>NM</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-06-28</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356249</td>\n",
       "      <td>2016-07-17</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt was paid</td>\n",
       "      <td>The Law Office of Arnold Scott Harris PC has c...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Arnold Scott Harris, P.C.</td>\n",
       "      <td>IL</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-07-17</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356657</td>\n",
       "      <td>2015-08-28</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>I have recently lost my job. I 'm currently se...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Citibank</td>\n",
       "      <td>NY</td>\n",
       "      <td>Older American, Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-08-28</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>357261</td>\n",
       "      <td>2016-05-27</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt is not mine</td>\n",
       "      <td>I received a debt collection notice from Natio...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>National Credit Systems,Inc.</td>\n",
       "      <td>VA</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-05-27</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>357414</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Mortgage</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Not disclosed as an attempt to collect</td>\n",
       "      <td>My roommate and I lived at XXXX XXXX XXXX for ...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>I.Q. Data International, Inc.</td>\n",
       "      <td>VA</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-06-06</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1170 rows Ã— 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date received          Product                            Sub-product  \\\n",
       "109       2015-09-08  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "356       2016-07-07  Debt collection                            Credit card   \n",
       "597       2015-10-24  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "851       2015-11-16  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "927       2016-01-29  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "...              ...              ...                                    ...   \n",
       "355936    2016-06-28  Debt collection                            Credit card   \n",
       "356249    2016-07-17  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "356657    2015-08-28  Debt collection                            Credit card   \n",
       "357261    2016-05-27  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "357414    2016-06-06  Debt collection                               Mortgage   \n",
       "\n",
       "                                        Issue  \\\n",
       "109        False statements or representation   \n",
       "356     Cont'd attempts collect debt not owed   \n",
       "597        False statements or representation   \n",
       "851           Disclosure verification of debt   \n",
       "927     Cont'd attempts collect debt not owed   \n",
       "...                                       ...   \n",
       "355936                  Communication tactics   \n",
       "356249  Cont'd attempts collect debt not owed   \n",
       "356657                  Communication tactics   \n",
       "357261  Cont'd attempts collect debt not owed   \n",
       "357414        Disclosure verification of debt   \n",
       "\n",
       "                                     Sub-issue  \\\n",
       "109          Attempted to collect wrong amount   \n",
       "356                           Debt is not mine   \n",
       "597          Attempted to collect wrong amount   \n",
       "851       Right to dispute notice not received   \n",
       "927                              Debt was paid   \n",
       "...                                        ...   \n",
       "355936              Frequent or repeated calls   \n",
       "356249                           Debt was paid   \n",
       "356657              Frequent or repeated calls   \n",
       "357261                        Debt is not mine   \n",
       "357414  Not disclosed as an attempt to collect   \n",
       "\n",
       "                             Consumer complaint narrative  \\\n",
       "109     Amshire Collections is attempting to collect a...   \n",
       "356     I WAS SUED BY EQUABLE ASCENT FINANCIAL LLC WHI...   \n",
       "597     I owe a bill XXXX from early cancellation of c...   \n",
       "851     Defendant gave debt to collection agency who c...   \n",
       "927     XXXX XXXX continues to send this account to co...   \n",
       "...                                                   ...   \n",
       "355936  Company calls me three to six times a day even...   \n",
       "356249  The Law Office of Arnold Scott Harris PC has c...   \n",
       "356657  I have recently lost my job. I 'm currently se...   \n",
       "357261  I received a debt collection notice from Natio...   \n",
       "357414  My roommate and I lived at XXXX XXXX XXXX for ...   \n",
       "\n",
       "                                  Company public response  \\\n",
       "109     Company believes it acted appropriately as aut...   \n",
       "356     Company can't verify or dispute the facts in t...   \n",
       "597     Company believes it acted appropriately as aut...   \n",
       "851      Company chooses not to provide a public response   \n",
       "927     Company believes it acted appropriately as aut...   \n",
       "...                                                   ...   \n",
       "355936  Company has responded to the consumer and the ...   \n",
       "356249  Company believes it acted appropriately as aut...   \n",
       "356657   Company chooses not to provide a public response   \n",
       "357261  Company believes it acted appropriately as aut...   \n",
       "357414  Company believes it acted appropriately as aut...   \n",
       "\n",
       "                                 Company State                           Tags  \\\n",
       "109     Amsher Collection Services, Inc.    IN                  Servicemember   \n",
       "356               Allgate Financial, LLC    MD                  Servicemember   \n",
       "597         Valentine and Kebartas, Inc.    OH                  Servicemember   \n",
       "851      SquareTwo Financial Corporation    FL  Older American, Servicemember   \n",
       "927        Pinnacle Credit Services, LLC    SC                  Servicemember   \n",
       "...                                  ...   ...                            ...   \n",
       "355936             Wells Fargo & Company    NM                  Servicemember   \n",
       "356249         Arnold Scott Harris, P.C.    IL                 Older American   \n",
       "356657                          Citibank    NY  Older American, Servicemember   \n",
       "357261      National Credit Systems,Inc.    VA                  Servicemember   \n",
       "357414     I.Q. Data International, Inc.    VA                  Servicemember   \n",
       "\n",
       "       Consumer consent provided? Submitted via Date sent to company  \\\n",
       "109              Consent provided           Web           2015-09-08   \n",
       "356              Consent provided           Web           2016-07-07   \n",
       "597              Consent provided           Web           2015-10-28   \n",
       "851              Consent provided           Web           2015-11-16   \n",
       "927              Consent provided           Web           2016-02-03   \n",
       "...                           ...           ...                  ...   \n",
       "355936           Consent provided           Web           2016-06-28   \n",
       "356249           Consent provided           Web           2016-07-17   \n",
       "356657           Consent provided           Web           2015-08-28   \n",
       "357261           Consent provided           Web           2016-05-27   \n",
       "357414           Consent provided           Web           2016-06-06   \n",
       "\n",
       "           Company response to consumer Timely response? Consumer disputed?  \n",
       "109             Closed with explanation              Yes                 No  \n",
       "356             Closed with explanation              Yes                Yes  \n",
       "597             Closed with explanation              Yes                Yes  \n",
       "851             Closed with explanation              Yes                Yes  \n",
       "927             Closed with explanation              Yes                 No  \n",
       "...                                 ...              ...                ...  \n",
       "355936  Closed with non-monetary relief              Yes                 No  \n",
       "356249          Closed with explanation              Yes                 No  \n",
       "356657  Closed with non-monetary relief              Yes                 No  \n",
       "357261          Closed with explanation              Yes                 No  \n",
       "357414  Closed with non-monetary relief              Yes                 No  \n",
       "\n",
       "[1170 rows x 16 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=df.dropna()\n",
    "df=df.drop(['ZIP code','Complaint ID'], axis=1)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date received                   0.0\n",
       "Product                         0.0\n",
       "Sub-product                     0.0\n",
       "Issue                           0.0\n",
       "Sub-issue                       0.0\n",
       "Consumer complaint narrative    0.0\n",
       "Company public response         0.0\n",
       "Company                         0.0\n",
       "State                           0.0\n",
       "Consumer consent provided?      0.0\n",
       "Submitted via                   0.0\n",
       "Date sent to company            0.0\n",
       "Company response to consumer    0.0\n",
       "Timely response?                0.0\n",
       "Consumer disputed?              0.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()*100/len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1170 entries, 109 to 357414\n",
      "Data columns (total 16 columns):\n",
      "Date received                   1170 non-null datetime64[ns]\n",
      "Product                         1170 non-null object\n",
      "Sub-product                     1170 non-null object\n",
      "Issue                           1170 non-null object\n",
      "Sub-issue                       1170 non-null object\n",
      "Consumer complaint narrative    1170 non-null object\n",
      "Company public response         1170 non-null object\n",
      "Company                         1170 non-null object\n",
      "State                           1170 non-null object\n",
      "Tags                            1170 non-null object\n",
      "Consumer consent provided?      1170 non-null object\n",
      "Submitted via                   1170 non-null object\n",
      "Date sent to company            1170 non-null datetime64[ns]\n",
      "Company response to consumer    1170 non-null object\n",
      "Timely response?                1170 non-null object\n",
      "Consumer disputed?              1170 non-null object\n",
      "dtypes: datetime64[ns](2), object(14)\n",
      "memory usage: 91.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "      <th>Consumer disputed?</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>109</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>False statements or representation</td>\n",
       "      <td>Attempted to collect wrong amount</td>\n",
       "      <td>Amshire Collections is attempting to collect a...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Amsher Collection Services, Inc.</td>\n",
       "      <td>IN</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt is not mine</td>\n",
       "      <td>I WAS SUED BY EQUABLE ASCENT FINANCIAL LLC WHI...</td>\n",
       "      <td>Company can't verify or dispute the facts in t...</td>\n",
       "      <td>Allgate Financial, LLC</td>\n",
       "      <td>MD</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>597</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>False statements or representation</td>\n",
       "      <td>Attempted to collect wrong amount</td>\n",
       "      <td>I owe a bill XXXX from early cancellation of c...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Valentine and Kebartas, Inc.</td>\n",
       "      <td>OH</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>851</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Right to dispute notice not received</td>\n",
       "      <td>Defendant gave debt to collection agency who c...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>SquareTwo Financial Corporation</td>\n",
       "      <td>FL</td>\n",
       "      <td>Older American, Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>927</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt was paid</td>\n",
       "      <td>XXXX XXXX continues to send this account to co...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Pinnacle Credit Services, LLC</td>\n",
       "      <td>SC</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>355936</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>Company calls me three to six times a day even...</td>\n",
       "      <td>Company has responded to the consumer and the ...</td>\n",
       "      <td>Wells Fargo &amp; Company</td>\n",
       "      <td>NM</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356249</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt was paid</td>\n",
       "      <td>The Law Office of Arnold Scott Harris PC has c...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Arnold Scott Harris, P.C.</td>\n",
       "      <td>IL</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356657</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>I have recently lost my job. I 'm currently se...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Citibank</td>\n",
       "      <td>NY</td>\n",
       "      <td>Older American, Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>357261</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt is not mine</td>\n",
       "      <td>I received a debt collection notice from Natio...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>National Credit Systems,Inc.</td>\n",
       "      <td>VA</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>357414</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Mortgage</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Not disclosed as an attempt to collect</td>\n",
       "      <td>My roommate and I lived at XXXX XXXX XXXX for ...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>I.Q. Data International, Inc.</td>\n",
       "      <td>VA</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1170 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Product                            Sub-product  \\\n",
       "109     Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "356     Debt collection                            Credit card   \n",
       "597     Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "851     Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "927     Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "...                 ...                                    ...   \n",
       "355936  Debt collection                            Credit card   \n",
       "356249  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "356657  Debt collection                            Credit card   \n",
       "357261  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "357414  Debt collection                               Mortgage   \n",
       "\n",
       "                                        Issue  \\\n",
       "109        False statements or representation   \n",
       "356     Cont'd attempts collect debt not owed   \n",
       "597        False statements or representation   \n",
       "851           Disclosure verification of debt   \n",
       "927     Cont'd attempts collect debt not owed   \n",
       "...                                       ...   \n",
       "355936                  Communication tactics   \n",
       "356249  Cont'd attempts collect debt not owed   \n",
       "356657                  Communication tactics   \n",
       "357261  Cont'd attempts collect debt not owed   \n",
       "357414        Disclosure verification of debt   \n",
       "\n",
       "                                     Sub-issue  \\\n",
       "109          Attempted to collect wrong amount   \n",
       "356                           Debt is not mine   \n",
       "597          Attempted to collect wrong amount   \n",
       "851       Right to dispute notice not received   \n",
       "927                              Debt was paid   \n",
       "...                                        ...   \n",
       "355936              Frequent or repeated calls   \n",
       "356249                           Debt was paid   \n",
       "356657              Frequent or repeated calls   \n",
       "357261                        Debt is not mine   \n",
       "357414  Not disclosed as an attempt to collect   \n",
       "\n",
       "                             Consumer complaint narrative  \\\n",
       "109     Amshire Collections is attempting to collect a...   \n",
       "356     I WAS SUED BY EQUABLE ASCENT FINANCIAL LLC WHI...   \n",
       "597     I owe a bill XXXX from early cancellation of c...   \n",
       "851     Defendant gave debt to collection agency who c...   \n",
       "927     XXXX XXXX continues to send this account to co...   \n",
       "...                                                   ...   \n",
       "355936  Company calls me three to six times a day even...   \n",
       "356249  The Law Office of Arnold Scott Harris PC has c...   \n",
       "356657  I have recently lost my job. I 'm currently se...   \n",
       "357261  I received a debt collection notice from Natio...   \n",
       "357414  My roommate and I lived at XXXX XXXX XXXX for ...   \n",
       "\n",
       "                                  Company public response  \\\n",
       "109     Company believes it acted appropriately as aut...   \n",
       "356     Company can't verify or dispute the facts in t...   \n",
       "597     Company believes it acted appropriately as aut...   \n",
       "851      Company chooses not to provide a public response   \n",
       "927     Company believes it acted appropriately as aut...   \n",
       "...                                                   ...   \n",
       "355936  Company has responded to the consumer and the ...   \n",
       "356249  Company believes it acted appropriately as aut...   \n",
       "356657   Company chooses not to provide a public response   \n",
       "357261  Company believes it acted appropriately as aut...   \n",
       "357414  Company believes it acted appropriately as aut...   \n",
       "\n",
       "                                 Company State                           Tags  \\\n",
       "109     Amsher Collection Services, Inc.    IN                  Servicemember   \n",
       "356               Allgate Financial, LLC    MD                  Servicemember   \n",
       "597         Valentine and Kebartas, Inc.    OH                  Servicemember   \n",
       "851      SquareTwo Financial Corporation    FL  Older American, Servicemember   \n",
       "927        Pinnacle Credit Services, LLC    SC                  Servicemember   \n",
       "...                                  ...   ...                            ...   \n",
       "355936             Wells Fargo & Company    NM                  Servicemember   \n",
       "356249         Arnold Scott Harris, P.C.    IL                 Older American   \n",
       "356657                          Citibank    NY  Older American, Servicemember   \n",
       "357261      National Credit Systems,Inc.    VA                  Servicemember   \n",
       "357414     I.Q. Data International, Inc.    VA                  Servicemember   \n",
       "\n",
       "       Consumer consent provided? Submitted via  \\\n",
       "109              Consent provided           Web   \n",
       "356              Consent provided           Web   \n",
       "597              Consent provided           Web   \n",
       "851              Consent provided           Web   \n",
       "927              Consent provided           Web   \n",
       "...                           ...           ...   \n",
       "355936           Consent provided           Web   \n",
       "356249           Consent provided           Web   \n",
       "356657           Consent provided           Web   \n",
       "357261           Consent provided           Web   \n",
       "357414           Consent provided           Web   \n",
       "\n",
       "           Company response to consumer Timely response? Consumer disputed?  \n",
       "109             Closed with explanation              Yes                 No  \n",
       "356             Closed with explanation              Yes                Yes  \n",
       "597             Closed with explanation              Yes                Yes  \n",
       "851             Closed with explanation              Yes                Yes  \n",
       "927             Closed with explanation              Yes                 No  \n",
       "...                                 ...              ...                ...  \n",
       "355936  Closed with non-monetary relief              Yes                 No  \n",
       "356249          Closed with explanation              Yes                 No  \n",
       "356657  Closed with non-monetary relief              Yes                 No  \n",
       "357261          Closed with explanation              Yes                 No  \n",
       "357414  Closed with non-monetary relief              Yes                 No  \n",
       "\n",
       "[1170 rows x 14 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1=df.select_dtypes(include='object')\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "      <th>Consumer disputed?</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>109</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>52</td>\n",
       "      <td>4</td>\n",
       "      <td>27</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>16</td>\n",
       "      <td>222</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>597</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>453</td>\n",
       "      <td>4</td>\n",
       "      <td>374</td>\n",
       "      <td>38</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>851</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>34</td>\n",
       "      <td>141</td>\n",
       "      <td>7</td>\n",
       "      <td>333</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>927</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>1066</td>\n",
       "      <td>4</td>\n",
       "      <td>278</td>\n",
       "      <td>44</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>355936</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>21</td>\n",
       "      <td>101</td>\n",
       "      <td>9</td>\n",
       "      <td>380</td>\n",
       "      <td>35</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356249</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>866</td>\n",
       "      <td>4</td>\n",
       "      <td>30</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>356657</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>21</td>\n",
       "      <td>422</td>\n",
       "      <td>7</td>\n",
       "      <td>77</td>\n",
       "      <td>37</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>357261</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>16</td>\n",
       "      <td>480</td>\n",
       "      <td>4</td>\n",
       "      <td>246</td>\n",
       "      <td>49</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>357414</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>28</td>\n",
       "      <td>696</td>\n",
       "      <td>4</td>\n",
       "      <td>187</td>\n",
       "      <td>49</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1170 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Product  Sub-product  Issue  Sub-issue  Consumer complaint narrative  \\\n",
       "109           0            8     10          1                            52   \n",
       "356           0            1      7         16                           222   \n",
       "597           0            8     10          1                           453   \n",
       "851           0            8      9         34                           141   \n",
       "927           0            8      7         19                          1066   \n",
       "...         ...          ...    ...        ...                           ...   \n",
       "355936        0            1      6         21                           101   \n",
       "356249        0            8      7         19                           866   \n",
       "356657        0            1      6         21                           422   \n",
       "357261        0            8      7         16                           480   \n",
       "357414        0            6      9         28                           696   \n",
       "\n",
       "        Company public response  Company  State  Tags  \\\n",
       "109                           4       27     18     2   \n",
       "356                           6       14     23     2   \n",
       "597                           4      374     38     2   \n",
       "851                           7      333     11     1   \n",
       "927                           4      278     44     2   \n",
       "...                         ...      ...    ...   ...   \n",
       "355936                        9      380     35     2   \n",
       "356249                        4       30     17     0   \n",
       "356657                        7       77     37     1   \n",
       "357261                        4      246     49     2   \n",
       "357414                        4      187     49     2   \n",
       "\n",
       "        Consumer consent provided?  Submitted via  \\\n",
       "109                              0              0   \n",
       "356                              0              0   \n",
       "597                              0              0   \n",
       "851                              0              0   \n",
       "927                              0              0   \n",
       "...                            ...            ...   \n",
       "355936                           0              0   \n",
       "356249                           0              0   \n",
       "356657                           0              0   \n",
       "357261                           0              0   \n",
       "357414                           0              0   \n",
       "\n",
       "        Company response to consumer  Timely response?  Consumer disputed?  \n",
       "109                                1                 1                   0  \n",
       "356                                1                 1                   1  \n",
       "597                                1                 1                   1  \n",
       "851                                1                 1                   1  \n",
       "927                                1                 1                   0  \n",
       "...                              ...               ...                 ...  \n",
       "355936                             3                 1                   0  \n",
       "356249                             1                 1                   0  \n",
       "356657                             3                 1                   0  \n",
       "357261                             1                 1                   0  \n",
       "357414                             3                 1                   0  \n",
       "\n",
       "[1170 rows x 14 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "LE= LabelEncoder()\n",
    "df1=df1.apply(LE.fit_transform)\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.25494744,  0.95706365,  0.69616724, ..., -0.33020815,\n",
       "         0.21128856, -0.56221481],\n",
       "       [-0.25494744, -1.5624964 , -0.43145021, ..., -0.33020815,\n",
       "         0.21128856,  1.77867959],\n",
       "       [-0.25494744,  0.95706365,  0.69616724, ..., -0.33020815,\n",
       "         0.21128856,  1.77867959],\n",
       "       ...,\n",
       "       [-0.25494744, -1.5624964 , -0.80732269, ...,  2.26270146,\n",
       "         0.21128856, -0.56221481],\n",
       "       [-0.25494744,  0.95706365, -0.43145021, ..., -0.33020815,\n",
       "         0.21128856, -0.56221481],\n",
       "       [-0.25494744,  0.23718935,  0.32029476, ...,  2.26270146,\n",
       "         0.21128856, -0.56221481]])"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn import preprocessing\n",
    "standard_scaler=preprocessing.StandardScaler()\n",
    "standard_scaler.fit_transform(df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=df1.drop(['Consumer disputed?'],axis=1).values\n",
    "y=df1['Consumer disputed?'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression, LogisticRegression,Ridge, Lasso\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV, KFold\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best: 0.759829 using {'C': 0.1, 'penalty': 'l2', 'solver': 'lbfgs'}\n",
      "Acc_score is: 0.7598290598290598\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\linear_model\\_logistic.py:764: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import RepeatedStratifiedKFold\n",
    "model = LogisticRegression()\n",
    "solvers = ['newton-cg', 'lbfgs', 'liblinear']\n",
    "penalty = ['l2']\n",
    "c_values = [100, 10, 1.0, 0.1, 0.01]\n",
    "grid = dict(solver=solvers,penalty=penalty,C=c_values)\n",
    "cv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=1)\n",
    "grid_search = GridSearchCV(estimator=model, param_grid=grid, n_jobs=-1, cv=cv, scoring='accuracy',error_score=0)\n",
    "grid_result = grid_search.fit(x, y)\n",
    "print(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))\n",
    "predict=grid_search.predict(x)\n",
    "acc_score=accuracy_score(y, predict)\n",
    "print('Acc_score is:', acc_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.76      1.00      0.86       889\n",
      "           1       0.00      0.00      0.00       281\n",
      "\n",
      "    accuracy                           0.76      1170\n",
      "   macro avg       0.38      0.50      0.43      1170\n",
      "weighted avg       0.58      0.76      0.66      1170\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y, predict))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.760\n"
     ]
    }
   ],
   "source": [
    "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n",
    "from sklearn.model_selection import cross_val_score\n",
    "model = LinearDiscriminantAnalysis()\n",
    "cv = KFold(n_splits=5, shuffle=True, random_state=1)\n",
    "result = cross_val_score(model, x, y, cv=cv, scoring='accuracy')\n",
    "print('Accuracy: %.3f' % result.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 20 candidates, totalling 100 fits\n",
      "[CV] C=0.1, gamma=0.1, kernel=rbf ....................................\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[CV] ........ C=0.1, gamma=0.1, kernel=rbf, score=0.761, total=   0.6s\n",
      "[CV] C=0.1, gamma=0.1, kernel=rbf ....................................\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.5s remaining:    0.0s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[CV] ........ C=0.1, gamma=0.1, kernel=rbf, score=0.761, total=   0.4s\n",
      "[CV] C=0.1, gamma=0.1, kernel=rbf ....................................\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=1)]: Done   2 out of   2 | elapsed:    0.9s remaining:    0.0s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[CV] ........ C=0.1, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=0.1, gamma=0.1, kernel=rbf ....................................\n",
      "[CV] ........ C=0.1, gamma=0.1, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=0.1, gamma=0.1, kernel=rbf ....................................\n",
      "[CV] ........ C=0.1, gamma=0.1, kernel=rbf, score=0.756, total=   0.2s\n",
      "[CV] C=0.1, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=0.1, gamma=0.01, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=0.1, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=0.1, gamma=0.01, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=0.1, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=0.1, gamma=0.01, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=0.1, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=0.1, gamma=0.01, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=0.1, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=0.1, gamma=0.01, kernel=rbf, score=0.756, total=   0.3s\n",
      "[CV] C=0.1, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=0.1, gamma=0.001, kernel=rbf, score=0.761, total=   0.4s\n",
      "[CV] C=0.1, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=0.1, gamma=0.001, kernel=rbf, score=0.761, total=   0.5s\n",
      "[CV] C=0.1, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=0.1, gamma=0.001, kernel=rbf, score=0.761, total=   0.5s\n",
      "[CV] C=0.1, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=0.1, gamma=0.001, kernel=rbf, score=0.761, total=   0.5s\n",
      "[CV] C=0.1, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=0.1, gamma=0.001, kernel=rbf, score=0.756, total=   0.5s\n",
      "[CV] C=0.1, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=0.1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=0.1, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=0.1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=0.1, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=0.1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=0.1, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=0.1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=0.1, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=0.1, gamma=0.0001, kernel=rbf, score=0.756, total=   0.2s\n",
      "[CV] C=1, gamma=0.1, kernel=rbf ......................................\n",
      "[CV] .......... C=1, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=1, gamma=0.1, kernel=rbf ......................................\n",
      "[CV] .......... C=1, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=1, gamma=0.1, kernel=rbf ......................................\n",
      "[CV] .......... C=1, gamma=0.1, kernel=rbf, score=0.765, total=   0.2s\n",
      "[CV] C=1, gamma=0.1, kernel=rbf ......................................\n",
      "[CV] .......... C=1, gamma=0.1, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=1, gamma=0.1, kernel=rbf ......................................\n",
      "[CV] .......... C=1, gamma=0.1, kernel=rbf, score=0.756, total=   0.3s\n",
      "[CV] C=1, gamma=0.01, kernel=rbf .....................................\n",
      "[CV] ......... C=1, gamma=0.01, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=1, gamma=0.01, kernel=rbf .....................................\n",
      "[CV] ......... C=1, gamma=0.01, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=1, gamma=0.01, kernel=rbf .....................................\n",
      "[CV] ......... C=1, gamma=0.01, kernel=rbf, score=0.765, total=   0.3s\n",
      "[CV] C=1, gamma=0.01, kernel=rbf .....................................\n",
      "[CV] ......... C=1, gamma=0.01, kernel=rbf, score=0.761, total=   0.4s\n",
      "[CV] C=1, gamma=0.01, kernel=rbf .....................................\n",
      "[CV] ......... C=1, gamma=0.01, kernel=rbf, score=0.756, total=   0.7s\n",
      "[CV] C=1, gamma=0.001, kernel=rbf ....................................\n",
      "[CV] ........ C=1, gamma=0.001, kernel=rbf, score=0.731, total=   0.6s\n",
      "[CV] C=1, gamma=0.001, kernel=rbf ....................................\n",
      "[CV] ........ C=1, gamma=0.001, kernel=rbf, score=0.752, total=   0.6s\n",
      "[CV] C=1, gamma=0.001, kernel=rbf ....................................\n",
      "[CV] ........ C=1, gamma=0.001, kernel=rbf, score=0.748, total=   0.5s\n",
      "[CV] C=1, gamma=0.001, kernel=rbf ....................................\n",
      "[CV] ........ C=1, gamma=0.001, kernel=rbf, score=0.731, total=   0.5s\n",
      "[CV] C=1, gamma=0.001, kernel=rbf ....................................\n",
      "[CV] ........ C=1, gamma=0.001, kernel=rbf, score=0.735, total=   0.4s\n",
      "[CV] C=1, gamma=0.0001, kernel=rbf ...................................\n",
      "[CV] ....... C=1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.1s\n",
      "[CV] C=1, gamma=0.0001, kernel=rbf ...................................\n",
      "[CV] ....... C=1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.1s\n",
      "[CV] C=1, gamma=0.0001, kernel=rbf ...................................\n",
      "[CV] ....... C=1, gamma=0.0001, kernel=rbf, score=0.756, total=   0.1s\n",
      "[CV] C=1, gamma=0.0001, kernel=rbf ...................................\n",
      "[CV] ....... C=1, gamma=0.0001, kernel=rbf, score=0.761, total=   0.1s\n",
      "[CV] C=1, gamma=0.0001, kernel=rbf ...................................\n",
      "[CV] ....... C=1, gamma=0.0001, kernel=rbf, score=0.756, total=   0.1s\n",
      "[CV] C=10, gamma=0.1, kernel=rbf .....................................\n",
      "[CV] ......... C=10, gamma=0.1, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=10, gamma=0.1, kernel=rbf .....................................\n",
      "[CV] ......... C=10, gamma=0.1, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=10, gamma=0.1, kernel=rbf .....................................\n",
      "[CV] ......... C=10, gamma=0.1, kernel=rbf, score=0.765, total=   0.2s\n",
      "[CV] C=10, gamma=0.1, kernel=rbf .....................................\n",
      "[CV] ......... C=10, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=10, gamma=0.1, kernel=rbf .....................................\n",
      "[CV] ......... C=10, gamma=0.1, kernel=rbf, score=0.756, total=   0.3s\n",
      "[CV] C=10, gamma=0.01, kernel=rbf ....................................\n",
      "[CV] ........ C=10, gamma=0.01, kernel=rbf, score=0.748, total=   0.4s\n",
      "[CV] C=10, gamma=0.01, kernel=rbf ....................................\n",
      "[CV] ........ C=10, gamma=0.01, kernel=rbf, score=0.761, total=   0.6s\n",
      "[CV] C=10, gamma=0.01, kernel=rbf ....................................\n",
      "[CV] ........ C=10, gamma=0.01, kernel=rbf, score=0.756, total=   0.7s\n",
      "[CV] C=10, gamma=0.01, kernel=rbf ....................................\n",
      "[CV] ........ C=10, gamma=0.01, kernel=rbf, score=0.748, total=   0.7s\n",
      "[CV] C=10, gamma=0.01, kernel=rbf ....................................\n",
      "[CV] ........ C=10, gamma=0.01, kernel=rbf, score=0.744, total=   0.7s\n",
      "[CV] C=10, gamma=0.001, kernel=rbf ...................................\n",
      "[CV] ....... C=10, gamma=0.001, kernel=rbf, score=0.645, total=   0.7s\n",
      "[CV] C=10, gamma=0.001, kernel=rbf ...................................\n",
      "[CV] ....... C=10, gamma=0.001, kernel=rbf, score=0.679, total=   0.5s\n",
      "[CV] C=10, gamma=0.001, kernel=rbf ...................................\n",
      "[CV] ....... C=10, gamma=0.001, kernel=rbf, score=0.679, total=   0.3s\n",
      "[CV] C=10, gamma=0.001, kernel=rbf ...................................\n",
      "[CV] ....... C=10, gamma=0.001, kernel=rbf, score=0.675, total=   0.3s\n",
      "[CV] C=10, gamma=0.001, kernel=rbf ...................................\n",
      "[CV] ....... C=10, gamma=0.001, kernel=rbf, score=0.645, total=   0.3s\n",
      "[CV] C=10, gamma=0.0001, kernel=rbf ..................................\n",
      "[CV] ...... C=10, gamma=0.0001, kernel=rbf, score=0.718, total=   0.2s\n",
      "[CV] C=10, gamma=0.0001, kernel=rbf ..................................\n",
      "[CV] ...... C=10, gamma=0.0001, kernel=rbf, score=0.726, total=   0.2s\n",
      "[CV] C=10, gamma=0.0001, kernel=rbf ..................................\n",
      "[CV] ...... C=10, gamma=0.0001, kernel=rbf, score=0.731, total=   0.2s\n",
      "[CV] C=10, gamma=0.0001, kernel=rbf ..................................\n",
      "[CV] ...... C=10, gamma=0.0001, kernel=rbf, score=0.748, total=   0.2s\n",
      "[CV] C=10, gamma=0.0001, kernel=rbf ..................................\n",
      "[CV] ...... C=10, gamma=0.0001, kernel=rbf, score=0.726, total=   0.2s\n",
      "[CV] C=100, gamma=0.1, kernel=rbf ....................................\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[CV] ........ C=100, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=100, gamma=0.1, kernel=rbf ....................................\n",
      "[CV] ........ C=100, gamma=0.1, kernel=rbf, score=0.761, total=   0.4s\n",
      "[CV] C=100, gamma=0.1, kernel=rbf ....................................\n",
      "[CV] ........ C=100, gamma=0.1, kernel=rbf, score=0.765, total=   0.5s\n",
      "[CV] C=100, gamma=0.1, kernel=rbf ....................................\n",
      "[CV] ........ C=100, gamma=0.1, kernel=rbf, score=0.761, total=   0.6s\n",
      "[CV] C=100, gamma=0.1, kernel=rbf ....................................\n",
      "[CV] ........ C=100, gamma=0.1, kernel=rbf, score=0.756, total=   0.7s\n",
      "[CV] C=100, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=100, gamma=0.01, kernel=rbf, score=0.748, total=   0.8s\n",
      "[CV] C=100, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=100, gamma=0.01, kernel=rbf, score=0.761, total=   0.7s\n",
      "[CV] C=100, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=100, gamma=0.01, kernel=rbf, score=0.756, total=   0.3s\n",
      "[CV] C=100, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=100, gamma=0.01, kernel=rbf, score=0.748, total=   0.3s\n",
      "[CV] C=100, gamma=0.01, kernel=rbf ...................................\n",
      "[CV] ....... C=100, gamma=0.01, kernel=rbf, score=0.744, total=   0.3s\n",
      "[CV] C=100, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=100, gamma=0.001, kernel=rbf, score=0.641, total=   0.4s\n",
      "[CV] C=100, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=100, gamma=0.001, kernel=rbf, score=0.705, total=   0.4s\n",
      "[CV] C=100, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=100, gamma=0.001, kernel=rbf, score=0.658, total=   0.4s\n",
      "[CV] C=100, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=100, gamma=0.001, kernel=rbf, score=0.667, total=   0.3s\n",
      "[CV] C=100, gamma=0.001, kernel=rbf ..................................\n",
      "[CV] ...... C=100, gamma=0.001, kernel=rbf, score=0.654, total=   0.6s\n",
      "[CV] C=100, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=100, gamma=0.0001, kernel=rbf, score=0.645, total=   0.7s\n",
      "[CV] C=100, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=100, gamma=0.0001, kernel=rbf, score=0.637, total=   0.9s\n",
      "[CV] C=100, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=100, gamma=0.0001, kernel=rbf, score=0.679, total=   1.0s\n",
      "[CV] C=100, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=100, gamma=0.0001, kernel=rbf, score=0.679, total=   0.5s\n",
      "[CV] C=100, gamma=0.0001, kernel=rbf .................................\n",
      "[CV] ..... C=100, gamma=0.0001, kernel=rbf, score=0.624, total=   0.4s\n",
      "[CV] C=1000, gamma=0.1, kernel=rbf ...................................\n",
      "[CV] ....... C=1000, gamma=0.1, kernel=rbf, score=0.761, total=   0.3s\n",
      "[CV] C=1000, gamma=0.1, kernel=rbf ...................................\n",
      "[CV] ....... C=1000, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=1000, gamma=0.1, kernel=rbf ...................................\n",
      "[CV] ....... C=1000, gamma=0.1, kernel=rbf, score=0.765, total=   0.3s\n",
      "[CV] C=1000, gamma=0.1, kernel=rbf ...................................\n",
      "[CV] ....... C=1000, gamma=0.1, kernel=rbf, score=0.761, total=   0.2s\n",
      "[CV] C=1000, gamma=0.1, kernel=rbf ...................................\n",
      "[CV] ....... C=1000, gamma=0.1, kernel=rbf, score=0.756, total=   0.3s\n",
      "[CV] C=1000, gamma=0.01, kernel=rbf ..................................\n",
      "[CV] ...... C=1000, gamma=0.01, kernel=rbf, score=0.748, total=   0.3s\n",
      "[CV] C=1000, gamma=0.01, kernel=rbf ..................................\n",
      "[CV] ...... C=1000, gamma=0.01, kernel=rbf, score=0.761, total=   0.5s\n",
      "[CV] C=1000, gamma=0.01, kernel=rbf ..................................\n",
      "[CV] ...... C=1000, gamma=0.01, kernel=rbf, score=0.756, total=   0.6s\n",
      "[CV] C=1000, gamma=0.01, kernel=rbf ..................................\n",
      "[CV] ...... C=1000, gamma=0.01, kernel=rbf, score=0.748, total=   0.6s\n",
      "[CV] C=1000, gamma=0.01, kernel=rbf ..................................\n",
      "[CV] ...... C=1000, gamma=0.01, kernel=rbf, score=0.744, total=   0.7s\n",
      "[CV] C=1000, gamma=0.001, kernel=rbf .................................\n",
      "[CV] ..... C=1000, gamma=0.001, kernel=rbf, score=0.650, total=   0.7s\n",
      "[CV] C=1000, gamma=0.001, kernel=rbf .................................\n",
      "[CV] ..... C=1000, gamma=0.001, kernel=rbf, score=0.688, total=   0.6s\n",
      "[CV] C=1000, gamma=0.001, kernel=rbf .................................\n",
      "[CV] ..... C=1000, gamma=0.001, kernel=rbf, score=0.654, total=   0.2s\n",
      "[CV] C=1000, gamma=0.001, kernel=rbf .................................\n",
      "[CV] ..... C=1000, gamma=0.001, kernel=rbf, score=0.667, total=   0.3s\n",
      "[CV] C=1000, gamma=0.001, kernel=rbf .................................\n",
      "[CV] ..... C=1000, gamma=0.001, kernel=rbf, score=0.650, total=   0.3s\n",
      "[CV] C=1000, gamma=0.0001, kernel=rbf ................................\n",
      "[CV] .... C=1000, gamma=0.0001, kernel=rbf, score=0.594, total=   1.8s\n",
      "[CV] C=1000, gamma=0.0001, kernel=rbf ................................\n",
      "[CV] .... C=1000, gamma=0.0001, kernel=rbf, score=0.628, total=   3.6s\n",
      "[CV] C=1000, gamma=0.0001, kernel=rbf ................................\n",
      "[CV] .... C=1000, gamma=0.0001, kernel=rbf, score=0.624, total=   2.3s\n",
      "[CV] C=1000, gamma=0.0001, kernel=rbf ................................\n",
      "[CV] .... C=1000, gamma=0.0001, kernel=rbf, score=0.615, total=   3.5s\n",
      "[CV] C=1000, gamma=0.0001, kernel=rbf ................................\n",
      "[CV] .... C=1000, gamma=0.0001, kernel=rbf, score=0.594, total=   2.1s\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=1)]: Done 100 out of 100 | elapsed:   51.0s finished\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9991452991452991\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "param_grid={'C':[0.1,1,10,100,1000],'gamma':[0.1,0.01,0.001,0.0001],'kernel':['rbf']}\n",
    "grid=GridSearchCV(SVC(), param_grid,refit=True, verbose=3)\n",
    "grid.fit(x,y)\n",
    "grid_prediction=grid.predict(x)\n",
    "print(accuracy_score(y,grid_prediction))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RF: acc:0.7598290598290598)\n",
      "SVM: acc:0.7606837606837606)\n"
     ]
    }
   ],
   "source": [
    "models=[]\n",
    "models.append(('RF',RandomForestClassifier(n_estimators=200, max_depth=3,random_state=0)))\n",
    "models.append(('SVM',SVC(gamma='auto')))\n",
    "CV=5\n",
    "for name,model in models:\n",
    "    cvs=cross_val_score(model,x,y,scoring='accuracy',cv=CV)\n",
    "    print('{}: acc:{})'.format(name,cvs.mean()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date received</th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>ZIP code</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Date sent to company</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "      <th>Complaint ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2015-01-17</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Customer service / Customer relations</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Citibank</td>\n",
       "      <td>TX</td>\n",
       "      <td>75241</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-01-17</td>\n",
       "      <td>Closed with monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1198133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2016-06-22</td>\n",
       "      <td>Consumer Loan</td>\n",
       "      <td>Title loan</td>\n",
       "      <td>Payment to acct not credited</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Larsen MacColl Partners II, L.P.</td>\n",
       "      <td>TX</td>\n",
       "      <td>76548</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Phone</td>\n",
       "      <td>2016-06-22</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1979989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2015-09-04</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Credit line increase/decrease</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I WANT TO REQUEST A CREDIT LINE INCREASE OF XX...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Capital One</td>\n",
       "      <td>NC</td>\n",
       "      <td>271XX</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-09-04</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1552090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2016-05-17</td>\n",
       "      <td>Consumer Loan</td>\n",
       "      <td>Installment loan</td>\n",
       "      <td>Problems when you are unable to pay</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I have asked One Main Financial not to call my...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OneMain Financial Holdings, LLC</td>\n",
       "      <td>MO</td>\n",
       "      <td>634XX</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-05-20</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1929306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>2016-07-07</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Improper contact or sharing of info</td>\n",
       "      <td>Contacted employer after asked not to</td>\n",
       "      <td>I have received several calls from a XXXX XXXX...</td>\n",
       "      <td>Company has responded to the consumer and the ...</td>\n",
       "      <td>GMA Investments, LLC</td>\n",
       "      <td>SC</td>\n",
       "      <td>296XX</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2016-07-07</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2001667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119601</td>\n",
       "      <td>2015-02-09</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Credit determination</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Citibank</td>\n",
       "      <td>IL</td>\n",
       "      <td>60803</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-02-09</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1230729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119602</td>\n",
       "      <td>2012-11-13</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Balance transfer</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Capital One</td>\n",
       "      <td>KS</td>\n",
       "      <td>67114</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Web</td>\n",
       "      <td>2012-11-14</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>189749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119603</td>\n",
       "      <td>2012-05-15</td>\n",
       "      <td>Mortgage</td>\n",
       "      <td>Other mortgage</td>\n",
       "      <td>Loan modification,collection,foreclosure</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Bank of America</td>\n",
       "      <td>CA</td>\n",
       "      <td>95691</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Referral</td>\n",
       "      <td>2012-05-15</td>\n",
       "      <td>Closed without relief</td>\n",
       "      <td>Yes</td>\n",
       "      <td>78574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119604</td>\n",
       "      <td>2015-06-07</td>\n",
       "      <td>Credit reporting</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Incorrect information on credit report</td>\n",
       "      <td>Reinserted previously deleted info</td>\n",
       "      <td>In XX/XX/XXXX, a Collection firm by the name o...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Experian</td>\n",
       "      <td>OH</td>\n",
       "      <td>436XX</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-06-07</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1409765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119605</td>\n",
       "      <td>2015-03-20</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>I do not know</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>They have called my number asking for someone ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Northland Group, Inc.</td>\n",
       "      <td>FL</td>\n",
       "      <td>322XX</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>2015-03-20</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1294040</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>119606 rows Ã— 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date received           Product                            Sub-product  \\\n",
       "0         2015-01-17       Credit card                                    NaN   \n",
       "1         2016-06-22     Consumer Loan                             Title loan   \n",
       "2         2015-09-04       Credit card                                    NaN   \n",
       "3         2016-05-17     Consumer Loan                       Installment loan   \n",
       "4         2016-07-07   Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "...              ...               ...                                    ...   \n",
       "119601    2015-02-09       Credit card                                    NaN   \n",
       "119602    2012-11-13       Credit card                                    NaN   \n",
       "119603    2012-05-15          Mortgage                         Other mortgage   \n",
       "119604    2015-06-07  Credit reporting                                    NaN   \n",
       "119605    2015-03-20   Debt collection                          I do not know   \n",
       "\n",
       "                                           Issue  \\\n",
       "0          Customer service / Customer relations   \n",
       "1                   Payment to acct not credited   \n",
       "2                  Credit line increase/decrease   \n",
       "3            Problems when you are unable to pay   \n",
       "4            Improper contact or sharing of info   \n",
       "...                                          ...   \n",
       "119601                      Credit determination   \n",
       "119602                          Balance transfer   \n",
       "119603  Loan modification,collection,foreclosure   \n",
       "119604    Incorrect information on credit report   \n",
       "119605                     Communication tactics   \n",
       "\n",
       "                                    Sub-issue  \\\n",
       "0                                         NaN   \n",
       "1                                         NaN   \n",
       "2                                         NaN   \n",
       "3                                         NaN   \n",
       "4       Contacted employer after asked not to   \n",
       "...                                       ...   \n",
       "119601                                    NaN   \n",
       "119602                                    NaN   \n",
       "119603                                    NaN   \n",
       "119604     Reinserted previously deleted info   \n",
       "119605             Frequent or repeated calls   \n",
       "\n",
       "                             Consumer complaint narrative  \\\n",
       "0                                                     NaN   \n",
       "1                                                     NaN   \n",
       "2       I WANT TO REQUEST A CREDIT LINE INCREASE OF XX...   \n",
       "3       I have asked One Main Financial not to call my...   \n",
       "4       I have received several calls from a XXXX XXXX...   \n",
       "...                                                   ...   \n",
       "119601                                                NaN   \n",
       "119602                                                NaN   \n",
       "119603                                                NaN   \n",
       "119604  In XX/XX/XXXX, a Collection firm by the name o...   \n",
       "119605  They have called my number asking for someone ...   \n",
       "\n",
       "                                  Company public response  \\\n",
       "0                                                     NaN   \n",
       "1       Company believes it acted appropriately as aut...   \n",
       "2                                                     NaN   \n",
       "3                                                     NaN   \n",
       "4       Company has responded to the consumer and the ...   \n",
       "...                                                   ...   \n",
       "119601                                                NaN   \n",
       "119602                                                NaN   \n",
       "119603                                                NaN   \n",
       "119604   Company chooses not to provide a public response   \n",
       "119605                                                NaN   \n",
       "\n",
       "                                 Company State ZIP code           Tags  \\\n",
       "0                               Citibank    TX    75241            NaN   \n",
       "1       Larsen MacColl Partners II, L.P.    TX    76548  Servicemember   \n",
       "2                            Capital One    NC    271XX            NaN   \n",
       "3        OneMain Financial Holdings, LLC    MO    634XX            NaN   \n",
       "4                   GMA Investments, LLC    SC    296XX            NaN   \n",
       "...                                  ...   ...      ...            ...   \n",
       "119601                          Citibank    IL    60803            NaN   \n",
       "119602                       Capital One    KS    67114            NaN   \n",
       "119603                   Bank of America    CA    95691            NaN   \n",
       "119604                          Experian    OH    436XX            NaN   \n",
       "119605             Northland Group, Inc.    FL    322XX            NaN   \n",
       "\n",
       "       Consumer consent provided? Submitted via Date sent to company  \\\n",
       "0                             NaN           Web           2015-01-17   \n",
       "1                             NaN         Phone           2016-06-22   \n",
       "2                Consent provided           Web           2015-09-04   \n",
       "3                Consent provided           Web           2016-05-20   \n",
       "4                Consent provided           Web           2016-07-07   \n",
       "...                           ...           ...                  ...   \n",
       "119601                        NaN           Web           2015-02-09   \n",
       "119602                        NaN           Web           2012-11-14   \n",
       "119603                        NaN      Referral           2012-05-15   \n",
       "119604           Consent provided           Web           2015-06-07   \n",
       "119605           Consent provided           Web           2015-03-20   \n",
       "\n",
       "           Company response to consumer Timely response?  Complaint ID  \n",
       "0           Closed with monetary relief              Yes       1198133  \n",
       "1               Closed with explanation              Yes       1979989  \n",
       "2               Closed with explanation              Yes       1552090  \n",
       "3       Closed with non-monetary relief              Yes       1929306  \n",
       "4               Closed with explanation              Yes       2001667  \n",
       "...                                 ...              ...           ...  \n",
       "119601          Closed with explanation              Yes       1230729  \n",
       "119602          Closed with explanation              Yes        189749  \n",
       "119603            Closed without relief              Yes         78574  \n",
       "119604          Closed with explanation              Yes       1409765  \n",
       "119605          Closed with explanation              Yes       1294040  \n",
       "\n",
       "[119606 rows x 17 columns]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Model Prediction with Test Data\n",
    "test_data=pd.read_csv('Edureka_Consumer_Complaints_test.csv',parse_dates=['Date received','Date sent to company'], dayfirst=False)\n",
    "test_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date received                    0.000000\n",
       "Product                          0.000000\n",
       "Sub-product                     28.997709\n",
       "Issue                            0.000000\n",
       "Sub-issue                       61.242747\n",
       "Consumer complaint narrative    84.186412\n",
       "Company public response         81.221678\n",
       "Company                          0.000000\n",
       "State                            0.782569\n",
       "ZIP code                         0.783406\n",
       "Tags                            85.805896\n",
       "Consumer consent provided?      71.651088\n",
       "Submitted via                    0.000000\n",
       "Date sent to company             0.000000\n",
       "Company response to consumer     0.000000\n",
       "Timely response?                 0.000000\n",
       "Complaint ID                     0.000000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data.isnull().sum()*100/len(test_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>312</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>This company Atlantic Credit and Finance is ca...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Atlantic Credit &amp; Finance, Inc.</td>\n",
       "      <td>TX</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with non-monetary relief</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>366</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Medical</td>\n",
       "      <td>Taking/threatening an illegal action</td>\n",
       "      <td>Sued w/o proper notification of suit</td>\n",
       "      <td>I entered into a payment plan with XXXX XXXX o...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Revenue Recovery Corporation</td>\n",
       "      <td>TN</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>539</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>I do not know</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt is not mine</td>\n",
       "      <td>I rec 'd a letter from Ally XXXX for a debt th...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Ally Financial Inc.</td>\n",
       "      <td>IA</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>670</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Disclosure verification of debt</td>\n",
       "      <td>Not disclosed as an attempt to collect</td>\n",
       "      <td>I received a message from a family member that...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Northern Alliance Management, LLC</td>\n",
       "      <td>MS</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>937</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Improper contact or sharing of info</td>\n",
       "      <td>Contacted me instead of my attorney</td>\n",
       "      <td>After retaining counsel in XXXX of XXXX due to...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Javitch, Block &amp; Rathbone LLC</td>\n",
       "      <td>OH</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>118652</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Credit card</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>I have been repeated called by XXXX XXXX after...</td>\n",
       "      <td>Company has responded to the consumer and the ...</td>\n",
       "      <td>Bank of America</td>\n",
       "      <td>OH</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>118659</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Medical</td>\n",
       "      <td>Cont'd attempts collect debt not owed</td>\n",
       "      <td>Debt was paid</td>\n",
       "      <td>I received a letter from Bay Area Credit Servi...</td>\n",
       "      <td>Company can't verify or dispute the facts in t...</td>\n",
       "      <td>HOVG, LLC</td>\n",
       "      <td>WA</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119351</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>I do not know</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>Telephone call, rude -- I think this related t...</td>\n",
       "      <td>Company believes it acted appropriately as aut...</td>\n",
       "      <td>Accounts Research, Inc.</td>\n",
       "      <td>TN</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119360</td>\n",
       "      <td>Student loan</td>\n",
       "      <td>Federal student loan servicing</td>\n",
       "      <td>Can't repay my loan</td>\n",
       "      <td>Can't decrease my monthly payments</td>\n",
       "      <td>To Whom It May Concern, I NEED YOUR HELP! I 'v...</td>\n",
       "      <td>Company has responded to the consumer and the ...</td>\n",
       "      <td>College Assist</td>\n",
       "      <td>GA</td>\n",
       "      <td>Servicemember</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119484</td>\n",
       "      <td>Debt collection</td>\n",
       "      <td>Other (i.e. phone, health club, etc.)</td>\n",
       "      <td>Communication tactics</td>\n",
       "      <td>Frequent or repeated calls</td>\n",
       "      <td>I have been on the DNC list. \\nI disconnected ...</td>\n",
       "      <td>Company chooses not to provide a public response</td>\n",
       "      <td>Receivables Performance Management LLC</td>\n",
       "      <td>NJ</td>\n",
       "      <td>Older American</td>\n",
       "      <td>Consent provided</td>\n",
       "      <td>Web</td>\n",
       "      <td>Closed with explanation</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>429 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Product                            Sub-product  \\\n",
       "312     Debt collection                            Credit card   \n",
       "366     Debt collection                                Medical   \n",
       "539     Debt collection                          I do not know   \n",
       "670     Debt collection                            Credit card   \n",
       "937     Debt collection                            Credit card   \n",
       "...                 ...                                    ...   \n",
       "118652  Debt collection                            Credit card   \n",
       "118659  Debt collection                                Medical   \n",
       "119351  Debt collection                          I do not know   \n",
       "119360     Student loan         Federal student loan servicing   \n",
       "119484  Debt collection  Other (i.e. phone, health club, etc.)   \n",
       "\n",
       "                                        Issue  \\\n",
       "312                     Communication tactics   \n",
       "366      Taking/threatening an illegal action   \n",
       "539     Cont'd attempts collect debt not owed   \n",
       "670           Disclosure verification of debt   \n",
       "937       Improper contact or sharing of info   \n",
       "...                                       ...   \n",
       "118652                  Communication tactics   \n",
       "118659  Cont'd attempts collect debt not owed   \n",
       "119351                  Communication tactics   \n",
       "119360                    Can't repay my loan   \n",
       "119484                  Communication tactics   \n",
       "\n",
       "                                     Sub-issue  \\\n",
       "312                 Frequent or repeated calls   \n",
       "366       Sued w/o proper notification of suit   \n",
       "539                           Debt is not mine   \n",
       "670     Not disclosed as an attempt to collect   \n",
       "937        Contacted me instead of my attorney   \n",
       "...                                        ...   \n",
       "118652              Frequent or repeated calls   \n",
       "118659                           Debt was paid   \n",
       "119351              Frequent or repeated calls   \n",
       "119360      Can't decrease my monthly payments   \n",
       "119484              Frequent or repeated calls   \n",
       "\n",
       "                             Consumer complaint narrative  \\\n",
       "312     This company Atlantic Credit and Finance is ca...   \n",
       "366     I entered into a payment plan with XXXX XXXX o...   \n",
       "539     I rec 'd a letter from Ally XXXX for a debt th...   \n",
       "670     I received a message from a family member that...   \n",
       "937     After retaining counsel in XXXX of XXXX due to...   \n",
       "...                                                   ...   \n",
       "118652  I have been repeated called by XXXX XXXX after...   \n",
       "118659  I received a letter from Bay Area Credit Servi...   \n",
       "119351  Telephone call, rude -- I think this related t...   \n",
       "119360  To Whom It May Concern, I NEED YOUR HELP! I 'v...   \n",
       "119484  I have been on the DNC list. \\nI disconnected ...   \n",
       "\n",
       "                                  Company public response  \\\n",
       "312      Company chooses not to provide a public response   \n",
       "366      Company chooses not to provide a public response   \n",
       "539      Company chooses not to provide a public response   \n",
       "670     Company believes it acted appropriately as aut...   \n",
       "937      Company chooses not to provide a public response   \n",
       "...                                                   ...   \n",
       "118652  Company has responded to the consumer and the ...   \n",
       "118659  Company can't verify or dispute the facts in t...   \n",
       "119351  Company believes it acted appropriately as aut...   \n",
       "119360  Company has responded to the consumer and the ...   \n",
       "119484   Company chooses not to provide a public response   \n",
       "\n",
       "                                       Company State            Tags  \\\n",
       "312            Atlantic Credit & Finance, Inc.    TX   Servicemember   \n",
       "366               Revenue Recovery Corporation    TN   Servicemember   \n",
       "539                        Ally Financial Inc.    IA  Older American   \n",
       "670          Northern Alliance Management, LLC    MS   Servicemember   \n",
       "937              Javitch, Block & Rathbone LLC    OH  Older American   \n",
       "...                                        ...   ...             ...   \n",
       "118652                         Bank of America    OH  Older American   \n",
       "118659                               HOVG, LLC    WA  Older American   \n",
       "119351                 Accounts Research, Inc.    TN  Older American   \n",
       "119360                          College Assist    GA   Servicemember   \n",
       "119484  Receivables Performance Management LLC    NJ  Older American   \n",
       "\n",
       "       Consumer consent provided? Submitted via  \\\n",
       "312              Consent provided           Web   \n",
       "366              Consent provided           Web   \n",
       "539              Consent provided           Web   \n",
       "670              Consent provided           Web   \n",
       "937              Consent provided           Web   \n",
       "...                           ...           ...   \n",
       "118652           Consent provided           Web   \n",
       "118659           Consent provided           Web   \n",
       "119351           Consent provided           Web   \n",
       "119360           Consent provided           Web   \n",
       "119484           Consent provided           Web   \n",
       "\n",
       "           Company response to consumer Timely response?  \n",
       "312     Closed with non-monetary relief              Yes  \n",
       "366             Closed with explanation              Yes  \n",
       "539             Closed with explanation              Yes  \n",
       "670             Closed with explanation              Yes  \n",
       "937             Closed with explanation              Yes  \n",
       "...                                 ...              ...  \n",
       "118652          Closed with explanation              Yes  \n",
       "118659          Closed with explanation              Yes  \n",
       "119351          Closed with explanation              Yes  \n",
       "119360          Closed with explanation              Yes  \n",
       "119484          Closed with explanation              Yes  \n",
       "\n",
       "[429 rows x 13 columns]"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data=test_data.drop(['ZIP code', 'Complaint ID'], axis=1)\n",
    "test_data=test_data.dropna()\n",
    "df2=test_data.select_dtypes(include='object')\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Product</th>\n",
       "      <th>Sub-product</th>\n",
       "      <th>Issue</th>\n",
       "      <th>Sub-issue</th>\n",
       "      <th>Consumer complaint narrative</th>\n",
       "      <th>Company public response</th>\n",
       "      <th>Company</th>\n",
       "      <th>State</th>\n",
       "      <th>Tags</th>\n",
       "      <th>Consumer consent provided?</th>\n",
       "      <th>Submitted via</th>\n",
       "      <th>Company response to consumer</th>\n",
       "      <th>Timely response?</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>312</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>334</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>366</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>32</td>\n",
       "      <td>104</td>\n",
       "      <td>6</td>\n",
       "      <td>183</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>539</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>13</td>\n",
       "      <td>156</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>670</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>167</td>\n",
       "      <td>3</td>\n",
       "      <td>153</td>\n",
       "      <td>26</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>937</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>120</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>118652</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>125</td>\n",
       "      <td>8</td>\n",
       "      <td>27</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>118659</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "      <td>166</td>\n",
       "      <td>5</td>\n",
       "      <td>107</td>\n",
       "      <td>47</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119351</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>301</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119360</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>356</td>\n",
       "      <td>8</td>\n",
       "      <td>50</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>119484</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>122</td>\n",
       "      <td>6</td>\n",
       "      <td>179</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>429 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Product  Sub-product  Issue  Sub-issue  Consumer complaint narrative  \\\n",
       "312           0            1      5         18                           334   \n",
       "366           0            5     13         32                           104   \n",
       "539           0            4      6         13                           156   \n",
       "670           0            1      8         25                           167   \n",
       "937           0            1     10         12                            14   \n",
       "...         ...          ...    ...        ...                           ...   \n",
       "118652        0            1      5         18                           125   \n",
       "118659        0            5      6         16                           166   \n",
       "119351        0            4      5         18                           301   \n",
       "119360        2            3      2          6                           356   \n",
       "119484        0            8      5         18                           122   \n",
       "\n",
       "        Company public response  Company  State  Tags  \\\n",
       "312                           6       23     43     2   \n",
       "366                           6      183     42     2   \n",
       "539                           6       11     13     0   \n",
       "670                           3      153     26     2   \n",
       "937                           6      120     35     0   \n",
       "...                         ...      ...    ...   ...   \n",
       "118652                        8       27     35     0   \n",
       "118659                        5      107     47     0   \n",
       "119351                        3        7     42     0   \n",
       "119360                        8       50     12     2   \n",
       "119484                        6      179     31     0   \n",
       "\n",
       "        Consumer consent provided?  Submitted via  \\\n",
       "312                              0              0   \n",
       "366                              0              0   \n",
       "539                              0              0   \n",
       "670                              0              0   \n",
       "937                              0              0   \n",
       "...                            ...            ...   \n",
       "118652                           0              0   \n",
       "118659                           0              0   \n",
       "119351                           0              0   \n",
       "119360                           0              0   \n",
       "119484                           0              0   \n",
       "\n",
       "        Company response to consumer  Timely response?  \n",
       "312                                3                 1  \n",
       "366                                1                 1  \n",
       "539                                1                 1  \n",
       "670                                1                 1  \n",
       "937                                1                 1  \n",
       "...                              ...               ...  \n",
       "118652                             1                 1  \n",
       "118659                             1                 1  \n",
       "119351                             1                 1  \n",
       "119360                             1                 1  \n",
       "119484                             1                 1  \n",
       "\n",
       "[429 rows x 13 columns]"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LE= LabelEncoder()\n",
    "df2=df2.apply(LE.fit_transform)\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.29265247, -1.63123601, -0.81375075, ...,  0.        ,\n",
       "         2.26478261,  0.2268713 ],\n",
       "       [-0.29265247, -0.11815439,  2.64267571, ...,  0.        ,\n",
       "        -0.32267875,  0.2268713 ],\n",
       "       [-0.29265247, -0.4964248 , -0.38169744, ...,  0.        ,\n",
       "        -0.32267875,  0.2268713 ],\n",
       "       ...,\n",
       "       [-0.29265247, -0.4964248 , -0.81375075, ...,  0.        ,\n",
       "        -0.32267875,  0.2268713 ],\n",
       "       [ 4.44500445, -0.8746952 , -2.10991068, ...,  0.        ,\n",
       "        -0.32267875,  0.2268713 ],\n",
       "       [-0.29265247,  1.01665682, -0.81375075, ...,  0.        ,\n",
       "        -0.32267875,  0.2268713 ]])"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "standard_scaler=preprocessing.StandardScaler()\n",
    "standard_scaler.fit_transform(df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "x1=df2.drop(['Company response to consumer'],axis=1).values\n",
    "y1=df2['Company response to consumer'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_split.py:672: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.\n",
      "  % (min_groups, self.n_splits)), UserWarning)\n",
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_split.py:672: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.\n",
      "  % (min_groups, self.n_splits)), UserWarning)\n",
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_split.py:672: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.\n",
      "  % (min_groups, self.n_splits)), UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best: 0.787907 using {'C': 0.01, 'penalty': 'l2', 'solver': 'newton-cg'}\n",
      "Acc_score is: 0.7878787878787878\n"
     ]
    }
   ],
   "source": [
    "model = LogisticRegression()\n",
    "solvers = ['newton-cg', 'lbfgs', 'liblinear']\n",
    "penalty = ['l2']\n",
    "c_values = [100, 10, 1.0, 0.1, 0.01]\n",
    "grid = dict(solver=solvers,penalty=penalty,C=c_values)\n",
    "cv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=1)\n",
    "grid_search = GridSearchCV(estimator=model, param_grid=grid, n_jobs=-1, cv=cv, scoring='accuracy',error_score=0)\n",
    "grid_result = grid_search.fit(x1, y1)\n",
    "print(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))\n",
    "predict=grid_search.predict(x1)\n",
    "acc_score=accuracy_score(y1, predict)\n",
    "print('Acc_score is:', acc_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.00      0.00      0.00        24\n",
      "           1       0.79      1.00      0.88       338\n",
      "           2       0.00      0.00      0.00         3\n",
      "           3       0.00      0.00      0.00        64\n",
      "\n",
      "    accuracy                           0.79       429\n",
      "   macro avg       0.20      0.25      0.22       429\n",
      "weighted avg       0.62      0.79      0.69       429\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\metrics\\_classification.py:1221: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y1, predict))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.779\n"
     ]
    }
   ],
   "source": [
    "model = LinearDiscriminantAnalysis()\n",
    "cv = KFold(n_splits=5, shuffle=True, random_state=1)\n",
    "result = cross_val_score(model, x1, y1, cv=cv, scoring='accuracy')\n",
    "print('Accuracy: %.3f' % result.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_split.py:672: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.\n",
      "  % (min_groups, self.n_splits)), UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RF: acc:0.7879069767441861)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\SVNPSP\\Anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_split.py:672: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.\n",
      "  % (min_groups, self.n_splits)), UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVM: acc:0.7879069767441861)\n"
     ]
    }
   ],
   "source": [
    "models=[]\n",
    "models.append(('RF',RandomForestClassifier(n_estimators=200, max_depth=3,random_state=0)))\n",
    "models.append(('SVM',SVC(gamma='auto')))\n",
    "CV=5\n",
    "for name,model in models:\n",
    "    cvs=cross_val_score(model,x1,y1,scoring='accuracy',cv=CV)\n",
    "    print('{}: acc:{})'.format(name,cvs.mean()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
